<idea-plugin>
    <id>org.tabooproject.development</id>

    <name>TabooLib Development</name>
    <vendor>TabooLib</vendor>

    <description><![CDATA[
        This IntelliJ-based plugin provides a Project Builder for <a href="https://github.com/TabooLib/taboolib">TabooLib</a>, enabling quick creation of TabooLib projects,
        with potential future integrations of more support specifically tailored for TabooLib projects.
        
        <br/><br/>
        
        <strong>Features:</strong>
        <ul>
            <li>TabooLib project wizard with module selection</li>
            <li>Intelligent code completion for TabooLib APIs</li>
            <li>Code inspections for common TabooLib patterns</li>
            <li>Unused code suppressors for TabooLib annotations</li>
        </ul>
        
        <br/>
        
        Compatible with K2 mode for enhanced performance and stability.
    ]]></description>

    <change-notes><![CDATA[
        <strong>v1.41</strong>
        <ul>
            <li>Full compatibility with Kotlin K2 compiler</li>
            <li>Refactor new project wizard setup</li>
            <li>Added TabooLib i18n support</li>
        </ul>
    ]]></change-notes>

    <!-- Minimum IDEA version: 2024.3 (build 243) -->
    <idea-version since-build="243" until-build=""/>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>org.jetbrains.kotlin</depends>

    <!-- K2 Mode Support Declaration -->
    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <supportsKotlinPluginMode supportsK2="true" />
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <moduleBuilder id="TABOO_PROJECT_BUILDER" builderClass="org.tabooproject.development.ProjectBuilder"/>

        <!-- Notification Groups -->
        <notificationGroup id="TabooLib" displayType="BALLOON"/>

        <!-- Suppressor -->
        <lang.inspectionSuppressor language="kotlin"
                                   implementationClass="org.tabooproject.development.suppressor.AnnotatedUnusedSuppressor"/>
        <lang.inspectionSuppressor language="kotlin"
                                   implementationClass="org.tabooproject.development.suppressor.ExpansionUnusedSuppressor"/>

        <localInspection displayName="Missing any method call after workspace()"
                         language="kotlin"
                         groupName="TabooLib"
                         enabledByDefault="true"
                         level="WARNING"
                         hasStaticDescription="false"
                         implementationClass="org.tabooproject.development.inspection.DatabaseWorkspaceInspection"/>

        <completion.contributor language="kotlin"
                                implementationClass="org.tabooproject.development.completion.LogFuncCompletion"/>
        <completion.contributor language="kotlin"
                                implementationClass="org.tabooproject.development.completion.ReflectMethodReflectCompletion"/>
        <completion.confidence language="kotlin" implementationClass="org.tabooproject.development.completion.TabooLiteralConfidence" order="before kotlinSkipAutopopupInStrings"/>

        <!-- TabooLib 语言文件支持 -->
        <!-- 语言文件折叠功能 -->
        <lang.foldingBuilder language="kotlin" order="first"
                             implementationClass="org.tabooproject.development.inlay.LangFoldingBuilder"/>
        
        <!-- 代码折叠选项提供器 -->
        <codeFoldingOptionsProvider implementation="org.tabooproject.development.inlay.LangFoldingOptionsProvider"/>
        
        <!-- 应用服务 -->
        <applicationService serviceImplementation="org.tabooproject.development.inlay.LangFoldingSettings"/>
        
        <!-- 项目启动活动 -->
        <postStartupActivity implementation="org.tabooproject.development.inlay.LangFoldingRefreshListener"/>
        <postStartupActivity implementation="org.tabooproject.development.inlay.LangFoldingEditorListener"/>
        <postStartupActivity implementation="org.tabooproject.development.inlay.LangFoldingDocumentListener"/>
        <postStartupActivity implementation="org.tabooproject.development.inlay.LangFoldingMouseListener"/>
        <postStartupActivity implementation="org.tabooproject.development.inlay.LangFoldingHighlighter"/>
                              
        <!-- 语言文件行标记导航 -->
        <codeInsight.lineMarkerProvider language="kotlin" 
                                       implementationClass="org.tabooproject.development.inlay.LangLineMarkerProvider"/>
                                       
        <!-- 边栏显示翻译内容 -->
        <codeInsight.lineMarkerProvider language="kotlin" 
                                       implementationClass="org.tabooproject.development.inlay.MinecraftLangGutterProvider"/>
        
        
        
        <!-- 语言文件编辑通知 -->
        <editorNotificationProvider implementation="org.tabooproject.development.inlay.LangEditorNotificationProvider"/>
        
        <!-- 语言文件颜色注解器 -->
        <annotator language="kotlin" implementationClass="org.tabooproject.development.inlay.LangFoldingColorAnnotator"/>
        
        <!-- 颜色设置页面 -->
        <colorSettingsPage implementation="org.tabooproject.development.inlay.LangColorSettingsPage"/>
    </extensions>
    
    <!-- 语言文件变更监听器 -->
    <applicationListeners>
        <listener class="org.tabooproject.development.inlay.LangFileListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    </applicationListeners>

    <resource-bundle/>
</idea-plugin>